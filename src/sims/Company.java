/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sims;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Dell
 */
public class Company extends javax.swing.JFrame {
     DBConnect dbconnect = new DBConnect();

    /**
     * Creates new form Company
     */
    public Company() {
        initComponents();
        initTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        compname = new javax.swing.JTextField();
        allowable = new javax.swing.JTextField();
        current = new javax.swing.JTextField();
        location = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        companyinfotab = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        where = new javax.swing.JComboBox<>();
        input = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        refresh = new javax.swing.JButton();
        refresh1 = new javax.swing.JButton();
        removeCompany = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(230, 209, 209));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setText("Company Details");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel2.setText("Company Name");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel3.setText("Number of Alowable Interns");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel4.setText("Current Interns");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel5.setText("Location");

        jButton1.setText("ADD Company");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(compname, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(allowable, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(current, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(location, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(30, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(compname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(allowable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(current, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(location, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(31, Short.MAX_VALUE))
        );

        companyinfotab.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "companyid", "name", "allowable", "current", "location", "vacancy"
            }
        ));
        jScrollPane1.setViewportView(companyinfotab);

        jLabel6.setText("See All Comapny Details");

        jLabel7.setText("Select By");

        where.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "CompanyName", "Location" }));

        jButton2.setText("OK");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        refresh.setText("See Vacancies");
        refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshActionPerformed(evt);
            }
        });

        refresh1.setText("Refresh");
        refresh1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refresh1ActionPerformed(evt);
            }
        });

        removeCompany.setText("Remove ");
        removeCompany.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeCompanyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(247, 247, 247)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 564, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(refresh)
                                .addGap(27, 27, 27)
                                .addComponent(removeCompany, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(36, 36, 36)
                                .addComponent(refresh1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 30, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(where, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(input, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(input, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(where, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(refresh, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(refresh1)
                    .addComponent(removeCompany))
                .addGap(15, 15, 15))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        
        try{
         
           
            String sql = "INSERT into COMPANY(CompanyName,NUmnerOfAllowableInterns,CurrentInterns,CompanyLocation) values('"+compname.getText()+"',"+Integer.parseInt(allowable.getText())+","+Integer.parseInt(current.getText())+",'"+location.getText()+"')";
            int r= dbconnect.getStatement().executeUpdate(sql);
//           
            compname.setText("");
            allowable.setText("");
            current.setText("");
            location.setText("");
            JOptionPane.showMessageDialog(null,"Inserted");
           
             }catch(SQLException e){
           e.printStackTrace();
        }
        DefaultTableModel model = (DefaultTableModel) companyinfotab.getModel();
        model.setRowCount(0);
        try {

            String sql = "SELECT * from COMPANY";
            ResultSet rs = dbconnect.getStatement().executeQuery(sql);
            while (rs.next()) {
                String id = String.valueOf(rs.getInt("CompanyId"));
                String name = rs.getString("CompanyName");
                String allowable = rs.getString("NUmnerOfAllowableInterns");
                String current = rs.getString("CurrentInterns");
                String location = rs.getString("CompanyLocation");
                String vacancy=rs.getString("Vacancy");

                String tbData[] = {id, name,allowable, current,location};
                DefaultTableModel tblModel = (DefaultTableModel) companyinfotab.getModel();
                tblModel.addRow(tbData);

            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        
    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       DefaultTableModel model = (DefaultTableModel) companyinfotab.getModel();
        model.setRowCount(0);
        try {
            String selectby=getSelectby();
            String value=getInput();
            String sql = "Select * from COMPANY where " + selectby + "= "+ value +"";
            ResultSet rs = dbconnect.getStatement().executeQuery(sql);
              System.out.println("------" + sql);
            while (rs.next()) {
                String id = String.valueOf(rs.getInt("CompanyId"));
                String name = rs.getString("CompanyName");
                String allowable = rs.getString("NUmnerOfAllowableInterns");
                String current = rs.getString("CurrentInterns");
                String location = rs.getString("CompanyLocation");
                String vacancy=rs.getString("Vacancy");

                String tbData[] = {id, name,allowable, current,location};
                DefaultTableModel tblModel = (DefaultTableModel) companyinfotab.getModel();
                tblModel.addRow(tbData);

            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
          
    }//GEN-LAST:event_jButton2ActionPerformed

    private void refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) companyinfotab.getModel();
        model.setRowCount(0);
        try {
            
            String update="update COMPANY set Vacancy=NUmnerOfAllowableInterns-CurrentInterns";
            int r=dbconnect.getStatement().executeUpdate(update);
            System.out.println("----"+r);
            String sql = "Select * From COMPANY order by vacancy desc";
            ResultSet rs = dbconnect.getStatement().executeQuery(sql);
            while (rs.next()) {
                String id = String.valueOf(rs.getInt("CompanyId"));
                String name = rs.getString("CompanyName");
                String allowable = rs.getString("NUmnerOfAllowableInterns");
                String current = rs.getString("CurrentInterns");
                String location = rs.getString("CompanyLocation");
                String vacancy=rs.getString("Vacancy");

                String tbData[] = {id, name,allowable, current,location,vacancy};
                DefaultTableModel tblModel = (DefaultTableModel) companyinfotab.getModel();
                tblModel.addRow(tbData);

            }
        } catch (SQLException e) {
            e.printStackTrace();
        }//To change body
        
    }//GEN-LAST:event_refreshActionPerformed

    private void refresh1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refresh1ActionPerformed
        // TODO add your handling code here:
         DefaultTableModel model = (DefaultTableModel) companyinfotab.getModel();
        model.setRowCount(0);
        try {

            String sql = "SELECT * from COMPANY";
            ResultSet rs = dbconnect.getStatement().executeQuery(sql);
            while (rs.next()) {
                String id = String.valueOf(rs.getInt("CompanyId"));
                String name = rs.getString("CompanyName");
                String allowable = rs.getString("NUmnerOfAllowableInterns");
                String current = rs.getString("CurrentInterns");
                String location = rs.getString("CompanyLocation");
                String vacancy=rs.getString("Vacancy");

                String tbData[] = {id, name,allowable, current,location};
                DefaultTableModel tblModel = (DefaultTableModel) companyinfotab.getModel();
                tblModel.addRow(tbData);

            }
        } catch (SQLException e) {
            e.printStackTrace();
        }//To change body of generated methods, choose Tools | Templates.
    }//GEN-LAST:event_refresh1ActionPerformed

    private void removeCompanyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeCompanyActionPerformed
        // TODO add your handling code here:
        
        try {

            String sql = "delete  from COMPANY  where vacancy=0";
            ResultSet rs = dbconnect.getStatement().executeQuery(sql);
            while (rs.next()) {
                String id = String.valueOf(rs.getInt("CompanyId"));
                String name = rs.getString("CompanyName");
                String allowable = rs.getString("NUmnerOfAllowableInterns");
                String current = rs.getString("CurrentInterns");
                String location = rs.getString("CompanyLocation");
                String vacancy=rs.getString("Vacancy");

                String tbData[] = {id, name,allowable, current,location,vacancy};
                DefaultTableModel tblModel = (DefaultTableModel) companyinfotab.getModel();
                tblModel.addRow(tbData);

            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        DefaultTableModel model = (DefaultTableModel) companyinfotab.getModel();
        model.setRowCount(0);
        try {
            
            String update="update COMPANY set Vacancy=NUmnerOfAllowableInterns-CurrentInterns";
            int r=dbconnect.getStatement().executeUpdate(update);
            System.out.println("----"+r);
            String sql = "Select * From COMPANY order by vacancy desc";
            ResultSet rs = dbconnect.getStatement().executeQuery(sql);
            while (rs.next()) {
                String id = String.valueOf(rs.getInt("CompanyId"));
                String name = rs.getString("CompanyName");
                String allowable = rs.getString("NUmnerOfAllowableInterns");
                String current = rs.getString("CurrentInterns");
                String location = rs.getString("CompanyLocation");
                String vacancy=rs.getString("Vacancy");

                String tbData[] = {id, name,allowable, current,location,vacancy};
                DefaultTableModel tblModel = (DefaultTableModel) companyinfotab.getModel();
                tblModel.addRow(tbData);

            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_removeCompanyActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Company.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Company.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Company.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Company.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Company().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField allowable;
    private javax.swing.JTable companyinfotab;
    private javax.swing.JTextField compname;
    private javax.swing.JTextField current;
    private javax.swing.JTextField input;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField location;
    private javax.swing.JButton refresh;
    private javax.swing.JButton refresh1;
    private javax.swing.JButton removeCompany;
    private javax.swing.JComboBox<String> where;
    // End of variables declaration//GEN-END:variables

    private void initTable() {
        DefaultTableModel model = (DefaultTableModel) companyinfotab.getModel();
        model.setRowCount(0);
        try {

            String sql = "SELECT * from COMPANY";
            ResultSet rs = dbconnect.getStatement().executeQuery(sql);
            while (rs.next()) {
                String id = String.valueOf(rs.getInt("CompanyId"));
                String name = rs.getString("CompanyName");
                String allowable = rs.getString("NUmnerOfAllowableInterns");
                String current = rs.getString("CurrentInterns");
                String location = rs.getString("CompanyLocation");
                String vacancy=rs.getString("Vacancy");

                String tbData[] = {id, name,allowable, current,location};
                DefaultTableModel tblModel = (DefaultTableModel) companyinfotab.getModel();
                tblModel.addRow(tbData);

            }
        } catch (SQLException e) {
            e.printStackTrace();
        }//To change body of generated methods, choose Tools | Templates.
    }

    private String getSelectby() {
        //To change body of generated methods, choose Tools | Templates.
         String selectby = where.getSelectedItem().toString();
        if (selectby.equals("CompanyName")) {
            return "CompanyName";
        } else  {
            return "CompanyLocation";
        } 

       
    }

    private String getInput() {
         
          return "'" + input.getText().toString() + "'";
 //To change body of generated methods, choose Tools | Templates.
    }
  
}
