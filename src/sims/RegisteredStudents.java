/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sims;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Dell
 */
public class RegisteredStudents extends javax.swing.JFrame {

    DBConnect dbconnect = new DBConnect();

    /**
     * Creates new form RegisteredStudents
     */
    public RegisteredStudents() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        studentsinfo = new javax.swing.JScrollPane();
        studentsinfotab = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        regid = new javax.swing.JTextField();
        name = new javax.swing.JTextField();
        email = new javax.swing.JTextField();
        pass = new javax.swing.JTextField();
        phoneno = new javax.swing.JTextField();
        address = new javax.swing.JTextField();
        department = new javax.swing.JTextField();
        year = new javax.swing.JTextField();
        semester = new javax.swing.JTextField();
        cgpa = new javax.swing.JTextField();
        interest = new javax.swing.JTextField();
        preference = new javax.swing.JTextField();
        status = new javax.swing.JComboBox<>();
        updatestatus = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        totalregbutton = new javax.swing.JButton();
        Totalreg = new javax.swing.JTextField();
        asc = new javax.swing.JButton();
        input = new javax.swing.JTextField();
        where = new javax.swing.JComboBox<>();
        jLabel15 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        input1 = new javax.swing.JTextField();
        input2 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        studentsinfotab.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Reg id.", "Name", "Email", "Password", "Phone no", "Address", "Dept name", "Year", "Semester", "CGPA", "Interest", "Preference", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true, true, true, true, true, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        studentsinfotab.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                studentsinfotabMouseClicked(evt);
            }
        });
        studentsinfo.setViewportView(studentsinfotab);

        getContentPane().add(studentsinfo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, 980, 120));

        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jButton1.setText("Registered Students Details");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 0, 330, -1));

        jLabel1.setText("RegisterId");

        jLabel2.setText("Student Name");

        jLabel3.setText("Student Email");

        jLabel4.setText("Student Password");

        jLabel5.setText("Phone no");

        jLabel6.setText("Address");

        jLabel7.setText("Department");

        jLabel8.setText("Year");

        jLabel9.setText("Semester");

        jLabel10.setText("CGPA");

        jLabel11.setText("Interest");

        jLabel12.setText("Company Preference");

        jLabel13.setText("Approval Status");

        name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameActionPerformed(evt);
            }
        });

        pass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passActionPerformed(evt);
            }
        });

        address.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addressActionPerformed(evt);
            }
        });

        year.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yearActionPerformed(evt);
            }
        });

        cgpa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cgpaActionPerformed(evt);
            }
        });

        status.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Not approved", "Approved" }));

        updatestatus.setText("Update Status");
        updatestatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatestatusActionPerformed(evt);
            }
        });

        jButton3.setText("Fill Up Internship Details");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(interest, javax.swing.GroupLayout.DEFAULT_SIZE, 239, Short.MAX_VALUE)
                            .addComponent(preference))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(phoneno, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(pass, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addGap(0, 0, Short.MAX_VALUE))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(regid, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 87, Short.MAX_VALUE)
                                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(83, 83, 83)))
                                .addComponent(cgpa, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(address, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, Short.MAX_VALUE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                .addGap(0, 0, Short.MAX_VALUE)
                                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(83, 83, 83)))
                                        .addComponent(year, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(semester, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(83, 83, 83)
                                                .addComponent(department, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                        .addGap(48, 48, 48))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(115, 115, 115)
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(status, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(updatestatus, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(regid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(phoneno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(address, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(department, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(year, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(16, 16, 16)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(semester, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cgpa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(interest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(preference, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(status, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updatestatus)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 260, 780, 350));

        jLabel14.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel14.setText("Student Details");
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 230, 130, 30));

        jButton2.setText("Refresh");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 160, 90, -1));

        totalregbutton.setText("Total Registered Students");
        totalregbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalregbuttonActionPerformed(evt);
            }
        });
        getContentPane().add(totalregbutton, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 200, 170, 30));
        getContentPane().add(Totalreg, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 240, 50, 40));

        asc.setText("Descending");
        asc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ascActionPerformed(evt);
            }
        });
        getContentPane().add(asc, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 120, -1));
        getContentPane().add(input, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 170, 80, -1));

        where.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Department", "Year", "CGPA" }));
        getContentPane().add(where, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 170, -1, -1));

        jLabel15.setText("Search By");
        getContentPane().add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 170, 50, 30));

        jButton4.setText("OK");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 170, -1, -1));
        getContentPane().add(input1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 200, 50, -1));
        getContentPane().add(input2, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 200, 50, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        DefaultTableModel model = (DefaultTableModel) studentsinfotab.getModel();
        model.setRowCount(0);
        try {

            String sql = "SELECT * from INTERNSHIP_APPLICATION_FORM";
            ResultSet rs = dbconnect.getStatement().executeQuery(sql);
            while (rs.next()) {
                String id = String.valueOf(rs.getInt("StudentRegisterId"));
                String name = rs.getString("StudentName");
                String email = rs.getString("StudentEmail");
                String password = rs.getString("StudentPassword");
                String phone = rs.getString("StudentPhoneNo");
                String address = rs.getString("StudentAddress");
                String deptname = rs.getString("DepartmentName");
                String year = rs.getString("CurrentYear");
                String semester = rs.getString("CurrentSemester");
                String cgpa = rs.getString("CGPA");
                String foi = rs.getString("FieldOfInterest");
                String companypref = rs.getString("CompanyPreference");
                String status = rs.getString("InternStatus");

                String tbData[] = {id, name, email, password, phone, address, deptname, year, semester, cgpa, foi, companypref, status};
                DefaultTableModel tblModel = (DefaultTableModel) studentsinfotab.getModel();
                tblModel.addRow(tbData);

            }
        } catch (SQLException e) {
            e.printStackTrace();
        }


    }//GEN-LAST:event_jButton1MouseClicked

    private void nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameActionPerformed

    private void cgpaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cgpaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cgpaActionPerformed

    private void yearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yearActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_yearActionPerformed

    private void updatestatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatestatusActionPerformed
        // TODO add your handling code here:
        try {

            int row = studentsinfotab.getSelectedRow();
            String value = (studentsinfotab.getModel().getValueAt(row, 0).toString());
            System.out.println("------" + value);
            String internstatus = status.getSelectedItem().toString();
            String query = "UPDATE INTERNSHIP_APPLICATION_FORM SET InternStatus='" + internstatus + "' where StudentRegisterId=" + Integer.parseInt(value);
            PreparedStatement pst = dbconnect.getConnection().prepareStatement(query);
            pst.executeUpdate();

            DefaultTableModel model = (DefaultTableModel) studentsinfotab.getModel();
            model.fireTableDataChanged();
            JOptionPane.showMessageDialog(null, "Updated");
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e);

        }
    }//GEN-LAST:event_updatestatusActionPerformed

    private void studentsinfotabMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_studentsinfotabMouseClicked
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) studentsinfotab.getModel();
        int selectedRowIndex = studentsinfotab.getSelectedRow();
        regid.setText(model.getValueAt(selectedRowIndex, 0).toString());
        name.setText(model.getValueAt(selectedRowIndex, 1).toString());
        email.setText(model.getValueAt(selectedRowIndex, 2).toString());
        pass.setText(model.getValueAt(selectedRowIndex, 3).toString());
        phoneno.setText(model.getValueAt(selectedRowIndex, 4).toString());
        address.setText(model.getValueAt(selectedRowIndex, 5).toString());
        department.setText(model.getValueAt(selectedRowIndex, 6).toString());
        year.setText(model.getValueAt(selectedRowIndex, 7).toString());
        semester.setText(model.getValueAt(selectedRowIndex, 8).toString());
        cgpa.setText(model.getValueAt(selectedRowIndex, 9).toString());
        interest.setText(model.getValueAt(selectedRowIndex, 10).toString());
        preference.setText(model.getValueAt(selectedRowIndex, 11).toString());
        status.setSelectedItem(model.getValueAt(selectedRowIndex, 12).toString());
    }//GEN-LAST:event_studentsinfotabMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void passActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passActionPerformed

    private void addressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addressActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        DefaultTableModel model = (DefaultTableModel) studentsinfotab.getModel();
        model.setRowCount(0);

        try {

            String sql = "SELECT * from INTERNSHIP_APPLICATION_FORM";
            ResultSet rs = dbconnect.getStatement().executeQuery(sql);
            while (rs.next()) {
                String id = String.valueOf(rs.getInt("StudentRegisterId"));
                String name = rs.getString("StudentName");
                String email = rs.getString("StudentEmail");
                String password = rs.getString("StudentPassword");
                String phone = rs.getString("StudentPhoneNo");
                String address = rs.getString("StudentAddress");
                String deptname = rs.getString("DepartmentName");
                String year = rs.getString("CurrentYear");
                String semester = rs.getString("CurrentSemester");
                String cgpa = rs.getString("CGPA");
                String foi = rs.getString("FieldOfInterest");
                String companypref = rs.getString("CompanyPreference");
                String status = rs.getString("InternStatus");

                String tbData[] = {id, name, email, password, phone, address, deptname, year, semester, cgpa, foi, companypref, status};
                DefaultTableModel tblModel = (DefaultTableModel) studentsinfotab.getModel();
                tblModel.addRow(tbData);

            }
        } catch (SQLException e) {
            e.printStackTrace();
        }


    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        new Internship_Details().setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void totalregbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalregbuttonActionPerformed
        // TODO add your handling code here:
        try {
            String sql = "SELECT COUNT(StudentRegisterId) as 'totalstudents' FROM INTERNSHIP_APPLICATION_FORM ";
            PreparedStatement pst = dbconnect.getConnection().prepareStatement(sql);
            ResultSet rs = pst.executeQuery();
            if (rs.next()) {
                String count = rs.getString("totalstudents");
                Totalreg.setText(count);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }


    }//GEN-LAST:event_totalregbuttonActionPerformed

    private void ascActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ascActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) studentsinfotab.getModel();
        model.setRowCount(0);

        try {

            String sql = "SELECT * from INTERNSHIP_APPLICATION_FORM ORDER BY CGPA DESC";
            ResultSet rs = dbconnect.getStatement().executeQuery(sql);
            while (rs.next()) {
                String id = String.valueOf(rs.getInt("StudentRegisterId"));
                String name = rs.getString("StudentName");
                String email = rs.getString("StudentEmail");
                String password = rs.getString("StudentPassword");
                String phone = rs.getString("StudentPhoneNo");
                String address = rs.getString("StudentAddress");
                String deptname = rs.getString("DepartmentName");
                String year = rs.getString("CurrentYear");
                String semester = rs.getString("CurrentSemester");
                String cgpa = rs.getString("CGPA");
                String foi = rs.getString("FieldOfInterest");
                String companypref = rs.getString("CompanyPreference");
                String status = rs.getString("InternStatus");

                String tbData[] = {id, name, email, password, phone, address, deptname, year, semester, cgpa, foi, companypref, status};
                DefaultTableModel tblModel = (DefaultTableModel) studentsinfotab.getModel();
                tblModel.addRow(tbData);

            }
        } catch (SQLException e) {
            e.printStackTrace();
        }


    }//GEN-LAST:event_ascActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) studentsinfotab.getModel();
        model.setRowCount(0);

        try {

            String selectby = getSelectby();
            String value = getInput(selectby);
            System.out.println("------" + selectby);
            if (!value.isEmpty()) {
                String sql = "SELECT * FROM INTERNSHIP_APPLICATION_FORM where " + selectby + "= " + value + "";
                ResultSet rs = dbconnect.getStatement().executeQuery(sql);
                System.out.println("------" + sql);

                while (rs.next()) {
                    String id = String.valueOf(rs.getInt("StudentRegisterId"));
                    String name = rs.getString("StudentName");
                    String email = rs.getString("StudentEmail");
                    String password = rs.getString("StudentPassword");
                    String phone = rs.getString("StudentPhoneNo");
                    String address = rs.getString("StudentAddress");
                    String deptname = rs.getString("DepartmentName");
                    String year = rs.getString("CurrentYear");
                    String semester = rs.getString("CurrentSemester");
                    String cgpa = rs.getString("CGPA");
                    String foi = rs.getString("FieldOfInterest");
                    String companypref = rs.getString("CompanyPreference");
                    String status = rs.getString("InternStatus");

                    String tbData[] = {id, name, email, password, phone, address, deptname, year, semester, cgpa, foi, companypref, status};
                    DefaultTableModel tblModel = (DefaultTableModel) studentsinfotab.getModel();
                    tblModel.addRow(tbData);

                }
            }

            System.out.println("------++++" + value.isEmpty());
            String value1 = input1.getText().toString();
            String value2 = input2.getText().toString();

            String sql1 = "SELECT * FROM INTERNSHIP_APPLICATION_FORM where " + selectby + " BETWEEN " + value1 + " AND " + value2 + "";

            ResultSet rs1 = dbconnect.getStatement().executeQuery(sql1);
            System.out.println("------" + sql1);
            while (rs1.next()) {
                String id = String.valueOf(rs1.getInt("StudentRegisterId"));
                String name = rs1.getString("StudentName");
                String email = rs1.getString("StudentEmail");
                String password = rs1.getString("StudentPassword");
                String phone = rs1.getString("StudentPhoneNo");
                String address = rs1.getString("StudentAddress");
                String deptname = rs1.getString("DepartmentName");
                String year = rs1.getString("CurrentYear");
                String semester = rs1.getString("CurrentSemester");
                String cgpa = rs1.getString("CGPA");
                String foi = rs1.getString("FieldOfInterest");
                String companypref = rs1.getString("CompanyPreference");
                String status = rs1.getString("InternStatus");

                String tbData[] = {id, name, email, password, phone, address, deptname, year, semester, cgpa, foi, companypref, status};
                DefaultTableModel tblModel = (DefaultTableModel) studentsinfotab.getModel();
                tblModel.addRow(tbData);

            }

        } catch (SQLException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegisteredStudents.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegisteredStudents.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegisteredStudents.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegisteredStudents.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegisteredStudents().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Totalreg;
    private javax.swing.JTextField address;
    private javax.swing.JButton asc;
    private javax.swing.JTextField cgpa;
    private javax.swing.JTextField department;
    private javax.swing.JTextField email;
    private javax.swing.JTextField input;
    private javax.swing.JTextField input1;
    private javax.swing.JTextField input2;
    private javax.swing.JTextField interest;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField name;
    private javax.swing.JTextField pass;
    private javax.swing.JTextField phoneno;
    private javax.swing.JTextField preference;
    private javax.swing.JTextField regid;
    private javax.swing.JTextField semester;
    private javax.swing.JComboBox<String> status;
    private javax.swing.JScrollPane studentsinfo;
    private javax.swing.JTable studentsinfotab;
    private javax.swing.JButton totalregbutton;
    private javax.swing.JButton updatestatus;
    private javax.swing.JComboBox<String> where;
    private javax.swing.JTextField year;
    // End of variables declaration//GEN-END:variables

    private void show_user() {
        try {

            String sql = "SELECT * from INTERNSHIP_APPLICATION_FORM";
            ResultSet rs = dbconnect.getStatement().executeQuery(sql);
            while (rs.next()) {
                String id = String.valueOf(rs.getInt("StudentRegisterId"));
                String name = rs.getString("StudentName");
                String email = rs.getString("StudentEmail");
                String password = rs.getString("StudentPassword");
                String phone = rs.getString("StudentPhoneNo");
                String address = rs.getString("StudentAddress");
                String deptname = rs.getString("DepartmentName");
                String year = rs.getString("CurrentYear");
                String semester = rs.getString("CurrentSemester");
                String cgpa = rs.getString("CGPA");
                String foi = rs.getString("FieldOfInterest");
                String companypref = rs.getString("CompanyPreference");
                String status = rs.getString("InternStatus");

                String tbData[] = {id, name, email, password, phone, address, deptname, year, semester, cgpa, foi, companypref, status};
                DefaultTableModel tblModel = (DefaultTableModel) studentsinfotab.getModel();
                tblModel.addRow(tbData);

            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    private String getInput(String s) {
        //To change body of generated methods, choose Tools | Templates.
        if (s.equals("DepartmentName")) {
            return "'" + input.getText().toString() + "'";
        } else {
            return input.getText().toString();
        }

    }

    private String getSelectby() {
        //To change body of generated methods, choose Tools | Templates.
        String selectby = where.getSelectedItem().toString();
        if (selectby.equals("Department")) {
            return "DepartmentName";
        } else if (selectby.equals("Year")) {
            return "CurrentYear";
        } else if (selectby.equals("CGPA")) {
            return "CGPA";
        }

        return null;
    }
}
